sync:
  interval_ms: 50   #made longer for testing
  overflow: 10
heartbeat:
  rate: 1
  msg: "77f#05"

nodes:

  RoboTeq_HBL2360A:
    eds_pkg: little_pig_ctrl
    eds_file: "/config/HBL2360A.eds"
    id: 8

    joint: ackermann_rear_axle
    motor_allocator: canopen::Motor402_1::Allocator
    vel_to_device: "(vel * 22  * 60 / (2 * pi))"
    vel_from_device: "(obj2106sub1 * 2 * pi / (60 * 22))"
    pos_from_device:  "(obj6044 * 2 * pi) / (24 * 22)"

    #velocity is m/s * 60 s/min * 1/0.0254 in/m * 1 / (2*pi*12) rev/in  #this goes m/s -> rev/min, 
    #NOTE: net gearbox reduces by 20
    motor_layer:
      switching_state: 5 #operation enable

#This is for Position Relative Feedback, This is ideal however the motor would not start correctly from CAN
    # joint_2: ackermann_steering_joint
    # motor_allocator_2: canopen::Motor402_2::Allocator
    # pos_to_device_2: "pos / (2 * pi / 12) * 1000"
    # pos_from_device_2:  "obj6064 * (2 * pi / 12) / 1000"
    # motor_layer_2:
    #   switching_state: 5 #operation enable

#This is for Count Position Fedback
    joint_2: ackermann_steering_joint
    motor_allocator_2: canopen::Motor402_2::Allocator
    pos_to_device_2: "(pos * 8196) / (2 * pi) * 47"
    pos_from_device_2:  "((obj2106sub2 > 2770) ? ((obj2106sub2 - 2770) * (2 * pi) / 8950) : ((obj2106sub2 - 2770) * (2 * pi) / 8710))"
    motor_layer_2:
      switching_state: 5 #operation enable
    
    #publish: #Uncomment this section to publish this data to ros topics
      #- "0x6064!" #	Battery Volts
      #- "0x210Fsub2!" #	Temp 1
      #- "0x210Fsub3!" #	Temp 2
      #- "0x6041!" #		Status Word 1
      #- "0x6841!" #		Status Word 2
      #- "0x210Asub1!" #	Motor 1 Speed
      #- "0x2122sub1!" #	Motor 1 Status Flag
      #- "0x2100sub1!" #	Motor 1 Amps
      #- "0x2104sub2!" #	Motor 2 Encoder Count
      #- "0x2122sub2!" #	Motor 2 Status Flag
      #- "0x2100sub2!" #	Motor 2 Amps
      #- "0x2112!" #		Fault Flag